<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tabEdit.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>